pipeline {
    agent any
    stages {
        stage('Build') {
            steps {
                echo "Building the code with Maven..."
                // sh 'mvn clean package'
            }
        }
        stage('Unit and Integration Tests') {
            steps {
                echo "Running unit and integration tests..."
                // sh 'mvn test'
            }
        }
        stage('Code Analysis') {
            steps {
                echo "Running code analysis with SonarQube..."
                // sh 'sonar-scanner'
            }
        }
        stage('Security Scan') {
            steps {
                echo "Running security scan..."
                // sh 'dependency-check.sh'
            }
        }
        stage('Deploy to Staging') {
            steps {
                echo "Deploying to staging..."
                // sh 'aws deploy create-deployment'
            }
        }
        stage('Integration Tests on Staging') {
            steps {
                echo "Running integration tests on staging..."
                // sh 'newman run collection.json'
            }
        }
        stage('Deploy to Production') {
            steps {
                echo "Deploying to production..."
                // sh 'aws deploy create-deployment'
            }
        }
    }

    post {
      success {
            emailext(
                to: 'fernandosenan@gmail.com',
                subject: "Pipeline Success: ${env.JOB_NAME} [${env.BUILD_NUMBER}]",
                body: "The pipeline has completed successfully.\n\nPlease find the build log attached.",
                attachLog: true
            )
      }
      failure {
            emailext(
                to: 'fernandosenan@gmail.com',
                subject: "Pipeline Failed: ${env.JOB_NAME} [${env.BUILD_NUMBER}]",
                body: "The pipeline has failed. Please check the attached build log for details.",
                attachLog: true
            )
      }
    }  

}
